// source: sgn/distribution/v1/query.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var cosmos_base_query_v1beta1_pagination_pb = require('../../../cosmos/base/query/v1beta1/pagination_pb.js');
goog.object.extend(proto, cosmos_base_query_v1beta1_pagination_pb);
var cosmos_base_v1beta1_coin_pb = require('../../../cosmos/base/v1beta1/coin_pb.js');
goog.object.extend(proto, cosmos_base_v1beta1_coin_pb);
var sgn_distribution_v1_distribution_pb = require('../../../sgn/distribution/v1/distribution_pb.js');
goog.object.extend(proto, sgn_distribution_v1_distribution_pb);
goog.exportSymbol('proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryCommunityPoolRequest', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryCommunityPoolResponse', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryDelegationRewardsRequest', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryDelegationRewardsResponse', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryMessageFeesInfoRequest', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryMessageFeesInfoResponse', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryParamsRequest', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryParamsResponse', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryStakingRewardInfoRequest', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryStakingRewardInfoResponse', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryValidatorCommissionRequest', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryValidatorCommissionResponse', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryParamsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryParamsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryParamsRequest.displayName = 'proto.sgn.distribution.v1.QueryParamsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryParamsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryParamsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryParamsResponse.displayName = 'proto.sgn.distribution.v1.QueryParamsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest.displayName = 'proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse.displayName = 'proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryValidatorCommissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryValidatorCommissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryValidatorCommissionRequest.displayName = 'proto.sgn.distribution.v1.QueryValidatorCommissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryValidatorCommissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryValidatorCommissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryValidatorCommissionResponse.displayName = 'proto.sgn.distribution.v1.QueryValidatorCommissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryDelegationRewardsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryDelegationRewardsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryDelegationRewardsRequest.displayName = 'proto.sgn.distribution.v1.QueryDelegationRewardsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryDelegationRewardsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sgn.distribution.v1.QueryDelegationRewardsResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryDelegationRewardsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryDelegationRewardsResponse.displayName = 'proto.sgn.distribution.v1.QueryDelegationRewardsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest.displayName = 'proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.displayName = 'proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest.displayName = 'proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse.displayName = 'proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest.displayName = 'proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse.displayName = 'proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryCommunityPoolRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryCommunityPoolRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryCommunityPoolRequest.displayName = 'proto.sgn.distribution.v1.QueryCommunityPoolRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryCommunityPoolResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sgn.distribution.v1.QueryCommunityPoolResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryCommunityPoolResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryCommunityPoolResponse.displayName = 'proto.sgn.distribution.v1.QueryCommunityPoolResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryStakingRewardInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryStakingRewardInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryStakingRewardInfoRequest.displayName = 'proto.sgn.distribution.v1.QueryStakingRewardInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryStakingRewardInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryStakingRewardInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryStakingRewardInfoResponse.displayName = 'proto.sgn.distribution.v1.QueryStakingRewardInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest.displayName = 'proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse.displayName = 'proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest.displayName = 'proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse.displayName = 'proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest.displayName = 'proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse.displayName = 'proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryMessageFeesInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryMessageFeesInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryMessageFeesInfoRequest.displayName = 'proto.sgn.distribution.v1.QueryMessageFeesInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.QueryMessageFeesInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.QueryMessageFeesInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.QueryMessageFeesInfoResponse.displayName = 'proto.sgn.distribution.v1.QueryMessageFeesInfoResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryParamsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryParamsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryParamsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryParamsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryParamsRequest}
 */
proto.sgn.distribution.v1.QueryParamsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryParamsRequest;
  return proto.sgn.distribution.v1.QueryParamsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryParamsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryParamsRequest}
 */
proto.sgn.distribution.v1.QueryParamsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryParamsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryParamsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryParamsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryParamsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryParamsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryParamsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryParamsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryParamsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    params: (f = msg.getParams()) && sgn_distribution_v1_distribution_pb.Params.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryParamsResponse}
 */
proto.sgn.distribution.v1.QueryParamsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryParamsResponse;
  return proto.sgn.distribution.v1.QueryParamsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryParamsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryParamsResponse}
 */
proto.sgn.distribution.v1.QueryParamsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sgn_distribution_v1_distribution_pb.Params;
      reader.readMessage(value,sgn_distribution_v1_distribution_pb.Params.deserializeBinaryFromReader);
      msg.setParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryParamsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryParamsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryParamsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryParamsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParams();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sgn_distribution_v1_distribution_pb.Params.serializeBinaryToWriter
    );
  }
};


/**
 * optional Params params = 1;
 * @return {?proto.sgn.distribution.v1.Params}
 */
proto.sgn.distribution.v1.QueryParamsResponse.prototype.getParams = function() {
  return /** @type{?proto.sgn.distribution.v1.Params} */ (
    jspb.Message.getWrapperField(this, sgn_distribution_v1_distribution_pb.Params, 1));
};


/**
 * @param {?proto.sgn.distribution.v1.Params|undefined} value
 * @return {!proto.sgn.distribution.v1.QueryParamsResponse} returns this
*/
proto.sgn.distribution.v1.QueryParamsResponse.prototype.setParams = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.distribution.v1.QueryParamsResponse} returns this
 */
proto.sgn.distribution.v1.QueryParamsResponse.prototype.clearParams = function() {
  return this.setParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.distribution.v1.QueryParamsResponse.prototype.hasParams = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest}
 */
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest;
  return proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest}
 */
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatorAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string validator_address = 1;
 * @return {string}
 */
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest.prototype.getValidatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest} returns this
 */
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsRequest.prototype.setValidatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rewards: (f = msg.getRewards()) && sgn_distribution_v1_distribution_pb.ValidatorOutstandingRewards.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse}
 */
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse;
  return proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse}
 */
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sgn_distribution_v1_distribution_pb.ValidatorOutstandingRewards;
      reader.readMessage(value,sgn_distribution_v1_distribution_pb.ValidatorOutstandingRewards.deserializeBinaryFromReader);
      msg.setRewards(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRewards();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sgn_distribution_v1_distribution_pb.ValidatorOutstandingRewards.serializeBinaryToWriter
    );
  }
};


/**
 * optional ValidatorOutstandingRewards rewards = 1;
 * @return {?proto.sgn.distribution.v1.ValidatorOutstandingRewards}
 */
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse.prototype.getRewards = function() {
  return /** @type{?proto.sgn.distribution.v1.ValidatorOutstandingRewards} */ (
    jspb.Message.getWrapperField(this, sgn_distribution_v1_distribution_pb.ValidatorOutstandingRewards, 1));
};


/**
 * @param {?proto.sgn.distribution.v1.ValidatorOutstandingRewards|undefined} value
 * @return {!proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse} returns this
*/
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse.prototype.setRewards = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse} returns this
 */
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse.prototype.clearRewards = function() {
  return this.setRewards(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.distribution.v1.QueryValidatorOutstandingRewardsResponse.prototype.hasRewards = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryValidatorCommissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryValidatorCommissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryValidatorCommissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryValidatorCommissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryValidatorCommissionRequest}
 */
proto.sgn.distribution.v1.QueryValidatorCommissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryValidatorCommissionRequest;
  return proto.sgn.distribution.v1.QueryValidatorCommissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryValidatorCommissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryValidatorCommissionRequest}
 */
proto.sgn.distribution.v1.QueryValidatorCommissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatorAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryValidatorCommissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryValidatorCommissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryValidatorCommissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryValidatorCommissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string validator_address = 1;
 * @return {string}
 */
proto.sgn.distribution.v1.QueryValidatorCommissionRequest.prototype.getValidatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.QueryValidatorCommissionRequest} returns this
 */
proto.sgn.distribution.v1.QueryValidatorCommissionRequest.prototype.setValidatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryValidatorCommissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryValidatorCommissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryValidatorCommissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryValidatorCommissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    commission: (f = msg.getCommission()) && sgn_distribution_v1_distribution_pb.ValidatorAccumulatedCommission.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryValidatorCommissionResponse}
 */
proto.sgn.distribution.v1.QueryValidatorCommissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryValidatorCommissionResponse;
  return proto.sgn.distribution.v1.QueryValidatorCommissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryValidatorCommissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryValidatorCommissionResponse}
 */
proto.sgn.distribution.v1.QueryValidatorCommissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sgn_distribution_v1_distribution_pb.ValidatorAccumulatedCommission;
      reader.readMessage(value,sgn_distribution_v1_distribution_pb.ValidatorAccumulatedCommission.deserializeBinaryFromReader);
      msg.setCommission(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryValidatorCommissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryValidatorCommissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryValidatorCommissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryValidatorCommissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommission();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sgn_distribution_v1_distribution_pb.ValidatorAccumulatedCommission.serializeBinaryToWriter
    );
  }
};


/**
 * optional ValidatorAccumulatedCommission commission = 1;
 * @return {?proto.sgn.distribution.v1.ValidatorAccumulatedCommission}
 */
proto.sgn.distribution.v1.QueryValidatorCommissionResponse.prototype.getCommission = function() {
  return /** @type{?proto.sgn.distribution.v1.ValidatorAccumulatedCommission} */ (
    jspb.Message.getWrapperField(this, sgn_distribution_v1_distribution_pb.ValidatorAccumulatedCommission, 1));
};


/**
 * @param {?proto.sgn.distribution.v1.ValidatorAccumulatedCommission|undefined} value
 * @return {!proto.sgn.distribution.v1.QueryValidatorCommissionResponse} returns this
*/
proto.sgn.distribution.v1.QueryValidatorCommissionResponse.prototype.setCommission = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.distribution.v1.QueryValidatorCommissionResponse} returns this
 */
proto.sgn.distribution.v1.QueryValidatorCommissionResponse.prototype.clearCommission = function() {
  return this.setCommission(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.distribution.v1.QueryValidatorCommissionResponse.prototype.hasCommission = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryDelegationRewardsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryDelegationRewardsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryDelegationRewardsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryDelegationRewardsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    delegatorAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    validatorAddress: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryDelegationRewardsRequest}
 */
proto.sgn.distribution.v1.QueryDelegationRewardsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryDelegationRewardsRequest;
  return proto.sgn.distribution.v1.QueryDelegationRewardsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryDelegationRewardsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryDelegationRewardsRequest}
 */
proto.sgn.distribution.v1.QueryDelegationRewardsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegatorAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatorAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryDelegationRewardsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryDelegationRewardsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryDelegationRewardsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryDelegationRewardsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValidatorAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string delegator_address = 1;
 * @return {string}
 */
proto.sgn.distribution.v1.QueryDelegationRewardsRequest.prototype.getDelegatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.QueryDelegationRewardsRequest} returns this
 */
proto.sgn.distribution.v1.QueryDelegationRewardsRequest.prototype.setDelegatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string validator_address = 2;
 * @return {string}
 */
proto.sgn.distribution.v1.QueryDelegationRewardsRequest.prototype.getValidatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.QueryDelegationRewardsRequest} returns this
 */
proto.sgn.distribution.v1.QueryDelegationRewardsRequest.prototype.setValidatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.distribution.v1.QueryDelegationRewardsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryDelegationRewardsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryDelegationRewardsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryDelegationRewardsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryDelegationRewardsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rewardsList: jspb.Message.toObjectList(msg.getRewardsList(),
    cosmos_base_v1beta1_coin_pb.DecCoin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryDelegationRewardsResponse}
 */
proto.sgn.distribution.v1.QueryDelegationRewardsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryDelegationRewardsResponse;
  return proto.sgn.distribution.v1.QueryDelegationRewardsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryDelegationRewardsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryDelegationRewardsResponse}
 */
proto.sgn.distribution.v1.QueryDelegationRewardsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cosmos_base_v1beta1_coin_pb.DecCoin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.addRewards(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryDelegationRewardsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryDelegationRewardsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryDelegationRewardsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryDelegationRewardsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRewardsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      cosmos_base_v1beta1_coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
};


/**
 * repeated cosmos.base.v1beta1.DecCoin rewards = 1;
 * @return {!Array<!proto.cosmos.base.v1beta1.DecCoin>}
 */
proto.sgn.distribution.v1.QueryDelegationRewardsResponse.prototype.getRewardsList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.DecCoin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.DecCoin, 1));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.DecCoin>} value
 * @return {!proto.sgn.distribution.v1.QueryDelegationRewardsResponse} returns this
*/
proto.sgn.distribution.v1.QueryDelegationRewardsResponse.prototype.setRewardsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.DecCoin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.distribution.v1.QueryDelegationRewardsResponse.prototype.addRewards = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cosmos.base.v1beta1.DecCoin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.distribution.v1.QueryDelegationRewardsResponse} returns this
 */
proto.sgn.distribution.v1.QueryDelegationRewardsResponse.prototype.clearRewardsList = function() {
  return this.setRewardsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    delegatorAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest}
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest;
  return proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest}
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegatorAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string delegator_address = 1;
 * @return {string}
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest.prototype.getDelegatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest} returns this
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsRequest.prototype.setDelegatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rewardsList: jspb.Message.toObjectList(msg.getRewardsList(),
    sgn_distribution_v1_distribution_pb.DelegationDelegatorReward.toObject, includeInstance),
    totalList: jspb.Message.toObjectList(msg.getTotalList(),
    cosmos_base_v1beta1_coin_pb.DecCoin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse}
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse;
  return proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse}
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sgn_distribution_v1_distribution_pb.DelegationDelegatorReward;
      reader.readMessage(value,sgn_distribution_v1_distribution_pb.DelegationDelegatorReward.deserializeBinaryFromReader);
      msg.addRewards(value);
      break;
    case 2:
      var value = new cosmos_base_v1beta1_coin_pb.DecCoin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.addTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRewardsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      sgn_distribution_v1_distribution_pb.DelegationDelegatorReward.serializeBinaryToWriter
    );
  }
  f = message.getTotalList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      cosmos_base_v1beta1_coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DelegationDelegatorReward rewards = 1;
 * @return {!Array<!proto.sgn.distribution.v1.DelegationDelegatorReward>}
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.prototype.getRewardsList = function() {
  return /** @type{!Array<!proto.sgn.distribution.v1.DelegationDelegatorReward>} */ (
    jspb.Message.getRepeatedWrapperField(this, sgn_distribution_v1_distribution_pb.DelegationDelegatorReward, 1));
};


/**
 * @param {!Array<!proto.sgn.distribution.v1.DelegationDelegatorReward>} value
 * @return {!proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse} returns this
*/
proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.prototype.setRewardsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sgn.distribution.v1.DelegationDelegatorReward=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.distribution.v1.DelegationDelegatorReward}
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.prototype.addRewards = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sgn.distribution.v1.DelegationDelegatorReward, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse} returns this
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.prototype.clearRewardsList = function() {
  return this.setRewardsList([]);
};


/**
 * repeated cosmos.base.v1beta1.DecCoin total = 2;
 * @return {!Array<!proto.cosmos.base.v1beta1.DecCoin>}
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.prototype.getTotalList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.DecCoin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.DecCoin, 2));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.DecCoin>} value
 * @return {!proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse} returns this
*/
proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.prototype.setTotalList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.DecCoin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.prototype.addTotal = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cosmos.base.v1beta1.DecCoin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse} returns this
 */
proto.sgn.distribution.v1.QueryDelegationTotalRewardsResponse.prototype.clearTotalList = function() {
  return this.setTotalList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    delegatorAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest}
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest;
  return proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest}
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegatorAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string delegator_address = 1;
 * @return {string}
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest.prototype.getDelegatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest} returns this
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsRequest.prototype.setDelegatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse}
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse;
  return proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse}
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValidators(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string validators = 1;
 * @return {!Array<string>}
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse.prototype.getValidatorsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse} returns this
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse.prototype.setValidatorsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse} returns this
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse.prototype.addValidators = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse} returns this
 */
proto.sgn.distribution.v1.QueryDelegatorValidatorsResponse.prototype.clearValidatorsList = function() {
  return this.setValidatorsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    delegatorAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest}
 */
proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest;
  return proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest}
 */
proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegatorAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string delegator_address = 1;
 * @return {string}
 */
proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest.prototype.getDelegatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest} returns this
 */
proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressRequest.prototype.setDelegatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    withdrawAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse}
 */
proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse;
  return proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse}
 */
proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWithdrawAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWithdrawAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string withdraw_address = 1;
 * @return {string}
 */
proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse.prototype.getWithdrawAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse} returns this
 */
proto.sgn.distribution.v1.QueryDelegatorWithdrawAddressResponse.prototype.setWithdrawAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryCommunityPoolRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryCommunityPoolRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryCommunityPoolRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryCommunityPoolRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryCommunityPoolRequest}
 */
proto.sgn.distribution.v1.QueryCommunityPoolRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryCommunityPoolRequest;
  return proto.sgn.distribution.v1.QueryCommunityPoolRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryCommunityPoolRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryCommunityPoolRequest}
 */
proto.sgn.distribution.v1.QueryCommunityPoolRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryCommunityPoolRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryCommunityPoolRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryCommunityPoolRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryCommunityPoolRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.distribution.v1.QueryCommunityPoolResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryCommunityPoolResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryCommunityPoolResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryCommunityPoolResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryCommunityPoolResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    poolList: jspb.Message.toObjectList(msg.getPoolList(),
    cosmos_base_v1beta1_coin_pb.DecCoin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryCommunityPoolResponse}
 */
proto.sgn.distribution.v1.QueryCommunityPoolResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryCommunityPoolResponse;
  return proto.sgn.distribution.v1.QueryCommunityPoolResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryCommunityPoolResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryCommunityPoolResponse}
 */
proto.sgn.distribution.v1.QueryCommunityPoolResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cosmos_base_v1beta1_coin_pb.DecCoin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.addPool(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryCommunityPoolResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryCommunityPoolResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryCommunityPoolResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryCommunityPoolResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPoolList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      cosmos_base_v1beta1_coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
};


/**
 * repeated cosmos.base.v1beta1.DecCoin pool = 1;
 * @return {!Array<!proto.cosmos.base.v1beta1.DecCoin>}
 */
proto.sgn.distribution.v1.QueryCommunityPoolResponse.prototype.getPoolList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.DecCoin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.DecCoin, 1));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.DecCoin>} value
 * @return {!proto.sgn.distribution.v1.QueryCommunityPoolResponse} returns this
*/
proto.sgn.distribution.v1.QueryCommunityPoolResponse.prototype.setPoolList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.DecCoin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.distribution.v1.QueryCommunityPoolResponse.prototype.addPool = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cosmos.base.v1beta1.DecCoin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.distribution.v1.QueryCommunityPoolResponse} returns this
 */
proto.sgn.distribution.v1.QueryCommunityPoolResponse.prototype.clearPoolList = function() {
  return this.setPoolList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryStakingRewardInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryStakingRewardInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryStakingRewardInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryStakingRewardInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    delegatorAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryStakingRewardInfoRequest}
 */
proto.sgn.distribution.v1.QueryStakingRewardInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryStakingRewardInfoRequest;
  return proto.sgn.distribution.v1.QueryStakingRewardInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryStakingRewardInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryStakingRewardInfoRequest}
 */
proto.sgn.distribution.v1.QueryStakingRewardInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegatorAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryStakingRewardInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryStakingRewardInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryStakingRewardInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryStakingRewardInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string delegator_address = 1;
 * @return {string}
 */
proto.sgn.distribution.v1.QueryStakingRewardInfoRequest.prototype.getDelegatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.QueryStakingRewardInfoRequest} returns this
 */
proto.sgn.distribution.v1.QueryStakingRewardInfoRequest.prototype.setDelegatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryStakingRewardInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryStakingRewardInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryStakingRewardInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryStakingRewardInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rewardInfo: (f = msg.getRewardInfo()) && sgn_distribution_v1_distribution_pb.StakingRewardInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryStakingRewardInfoResponse}
 */
proto.sgn.distribution.v1.QueryStakingRewardInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryStakingRewardInfoResponse;
  return proto.sgn.distribution.v1.QueryStakingRewardInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryStakingRewardInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryStakingRewardInfoResponse}
 */
proto.sgn.distribution.v1.QueryStakingRewardInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sgn_distribution_v1_distribution_pb.StakingRewardInfo;
      reader.readMessage(value,sgn_distribution_v1_distribution_pb.StakingRewardInfo.deserializeBinaryFromReader);
      msg.setRewardInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryStakingRewardInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryStakingRewardInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryStakingRewardInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryStakingRewardInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRewardInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sgn_distribution_v1_distribution_pb.StakingRewardInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional StakingRewardInfo reward_info = 1;
 * @return {?proto.sgn.distribution.v1.StakingRewardInfo}
 */
proto.sgn.distribution.v1.QueryStakingRewardInfoResponse.prototype.getRewardInfo = function() {
  return /** @type{?proto.sgn.distribution.v1.StakingRewardInfo} */ (
    jspb.Message.getWrapperField(this, sgn_distribution_v1_distribution_pb.StakingRewardInfo, 1));
};


/**
 * @param {?proto.sgn.distribution.v1.StakingRewardInfo|undefined} value
 * @return {!proto.sgn.distribution.v1.QueryStakingRewardInfoResponse} returns this
*/
proto.sgn.distribution.v1.QueryStakingRewardInfoResponse.prototype.setRewardInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.distribution.v1.QueryStakingRewardInfoResponse} returns this
 */
proto.sgn.distribution.v1.QueryStakingRewardInfoResponse.prototype.clearRewardInfo = function() {
  return this.setRewardInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.distribution.v1.QueryStakingRewardInfoResponse.prototype.hasRewardInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    delegatorAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest}
 */
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest;
  return proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest}
 */
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegatorAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string delegator_address = 1;
 * @return {string}
 */
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest.prototype.getDelegatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest} returns this
 */
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoRequest.prototype.setDelegatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rewardClaimInfo: (f = msg.getRewardClaimInfo()) && sgn_distribution_v1_distribution_pb.StakingRewardClaimInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse}
 */
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse;
  return proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse}
 */
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sgn_distribution_v1_distribution_pb.StakingRewardClaimInfo;
      reader.readMessage(value,sgn_distribution_v1_distribution_pb.StakingRewardClaimInfo.deserializeBinaryFromReader);
      msg.setRewardClaimInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRewardClaimInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sgn_distribution_v1_distribution_pb.StakingRewardClaimInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional StakingRewardClaimInfo reward_claim_info = 1;
 * @return {?proto.sgn.distribution.v1.StakingRewardClaimInfo}
 */
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse.prototype.getRewardClaimInfo = function() {
  return /** @type{?proto.sgn.distribution.v1.StakingRewardClaimInfo} */ (
    jspb.Message.getWrapperField(this, sgn_distribution_v1_distribution_pb.StakingRewardClaimInfo, 1));
};


/**
 * @param {?proto.sgn.distribution.v1.StakingRewardClaimInfo|undefined} value
 * @return {!proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse} returns this
*/
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse.prototype.setRewardClaimInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse} returns this
 */
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse.prototype.clearRewardClaimInfo = function() {
  return this.setRewardClaimInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.distribution.v1.QueryStakingRewardClaimInfoResponse.prototype.hasRewardClaimInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    delegatorAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest}
 */
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest;
  return proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest}
 */
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegatorAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string delegator_address = 1;
 * @return {string}
 */
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest.prototype.getDelegatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest} returns this
 */
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoRequest.prototype.setDelegatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    feeShareInfo: (f = msg.getFeeShareInfo()) && sgn_distribution_v1_distribution_pb.ClaimableFeesInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse}
 */
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse;
  return proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse}
 */
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sgn_distribution_v1_distribution_pb.ClaimableFeesInfo;
      reader.readMessage(value,sgn_distribution_v1_distribution_pb.ClaimableFeesInfo.deserializeBinaryFromReader);
      msg.setFeeShareInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeeShareInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sgn_distribution_v1_distribution_pb.ClaimableFeesInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ClaimableFeesInfo fee_share_info = 1;
 * @return {?proto.sgn.distribution.v1.ClaimableFeesInfo}
 */
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse.prototype.getFeeShareInfo = function() {
  return /** @type{?proto.sgn.distribution.v1.ClaimableFeesInfo} */ (
    jspb.Message.getWrapperField(this, sgn_distribution_v1_distribution_pb.ClaimableFeesInfo, 1));
};


/**
 * @param {?proto.sgn.distribution.v1.ClaimableFeesInfo|undefined} value
 * @return {!proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse} returns this
*/
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse.prototype.setFeeShareInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse} returns this
 */
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse.prototype.clearFeeShareInfo = function() {
  return this.setFeeShareInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.distribution.v1.QueryCBridgeFeeShareInfoResponse.prototype.hasFeeShareInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    delegatorAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest}
 */
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest;
  return proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest}
 */
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegatorAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string delegator_address = 1;
 * @return {string}
 */
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest.prototype.getDelegatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest} returns this
 */
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoRequest.prototype.setDelegatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    feesInfo: (f = msg.getFeesInfo()) && sgn_distribution_v1_distribution_pb.ClaimableFeesInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse}
 */
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse;
  return proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse}
 */
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sgn_distribution_v1_distribution_pb.ClaimableFeesInfo;
      reader.readMessage(value,sgn_distribution_v1_distribution_pb.ClaimableFeesInfo.deserializeBinaryFromReader);
      msg.setFeesInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeesInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sgn_distribution_v1_distribution_pb.ClaimableFeesInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ClaimableFeesInfo fees_info = 1;
 * @return {?proto.sgn.distribution.v1.ClaimableFeesInfo}
 */
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse.prototype.getFeesInfo = function() {
  return /** @type{?proto.sgn.distribution.v1.ClaimableFeesInfo} */ (
    jspb.Message.getWrapperField(this, sgn_distribution_v1_distribution_pb.ClaimableFeesInfo, 1));
};


/**
 * @param {?proto.sgn.distribution.v1.ClaimableFeesInfo|undefined} value
 * @return {!proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse} returns this
*/
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse.prototype.setFeesInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse} returns this
 */
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse.prototype.clearFeesInfo = function() {
  return this.setFeesInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.distribution.v1.QueryPegBridgeFeesInfoResponse.prototype.hasFeesInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryMessageFeesInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryMessageFeesInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryMessageFeesInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryMessageFeesInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    delegatorAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryMessageFeesInfoRequest}
 */
proto.sgn.distribution.v1.QueryMessageFeesInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryMessageFeesInfoRequest;
  return proto.sgn.distribution.v1.QueryMessageFeesInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryMessageFeesInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryMessageFeesInfoRequest}
 */
proto.sgn.distribution.v1.QueryMessageFeesInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegatorAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryMessageFeesInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryMessageFeesInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryMessageFeesInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryMessageFeesInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string delegator_address = 1;
 * @return {string}
 */
proto.sgn.distribution.v1.QueryMessageFeesInfoRequest.prototype.getDelegatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.QueryMessageFeesInfoRequest} returns this
 */
proto.sgn.distribution.v1.QueryMessageFeesInfoRequest.prototype.setDelegatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.QueryMessageFeesInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.QueryMessageFeesInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.QueryMessageFeesInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryMessageFeesInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    feesInfo: (f = msg.getFeesInfo()) && sgn_distribution_v1_distribution_pb.ClaimableFeesInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.QueryMessageFeesInfoResponse}
 */
proto.sgn.distribution.v1.QueryMessageFeesInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.QueryMessageFeesInfoResponse;
  return proto.sgn.distribution.v1.QueryMessageFeesInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.QueryMessageFeesInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.QueryMessageFeesInfoResponse}
 */
proto.sgn.distribution.v1.QueryMessageFeesInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sgn_distribution_v1_distribution_pb.ClaimableFeesInfo;
      reader.readMessage(value,sgn_distribution_v1_distribution_pb.ClaimableFeesInfo.deserializeBinaryFromReader);
      msg.setFeesInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.QueryMessageFeesInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sgn.distribution.v1.QueryMessageFeesInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.QueryMessageFeesInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.QueryMessageFeesInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeesInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sgn_distribution_v1_distribution_pb.ClaimableFeesInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ClaimableFeesInfo fees_info = 1;
 * @return {?proto.sgn.distribution.v1.ClaimableFeesInfo}
 */
proto.sgn.distribution.v1.QueryMessageFeesInfoResponse.prototype.getFeesInfo = function() {
  return /** @type{?proto.sgn.distribution.v1.ClaimableFeesInfo} */ (
    jspb.Message.getWrapperField(this, sgn_distribution_v1_distribution_pb.ClaimableFeesInfo, 1));
};


/**
 * @param {?proto.sgn.distribution.v1.ClaimableFeesInfo|undefined} value
 * @return {!proto.sgn.distribution.v1.QueryMessageFeesInfoResponse} returns this
*/
proto.sgn.distribution.v1.QueryMessageFeesInfoResponse.prototype.setFeesInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.distribution.v1.QueryMessageFeesInfoResponse} returns this
 */
proto.sgn.distribution.v1.QueryMessageFeesInfoResponse.prototype.clearFeesInfo = function() {
  return this.setFeesInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.distribution.v1.QueryMessageFeesInfoResponse.prototype.hasFeesInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.sgn.distribution.v1);
