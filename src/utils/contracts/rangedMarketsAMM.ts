import { Network } from 'utils/network';

export const rangedMarketAMMContract = {
    addresses: {
        [Network.Mainnet]: 'TBD',
        [Network.Ropsten]: 'TBD',
        [Network.Rinkeby]: 'TBD',
        [Network.Kovan]: 'TBD',
        // added to resolve error with typings
        [Network.Goerli]: '', // TODO: goerli network remove or implement
        [Network['Mainnet-Ovm']]: '0x2d356b114cbCA8DEFf2d8783EAc2a5A5324fE1dF',
        [Network['Kovan-Ovm']]: '0x0690F410FB54d76268e4fa97486CBD605e68dC62',
        [Network['POLYGON-MUMBAI']]: 'TBD',
        [Network['POLYGON-MAINNET']]: '0xe8e022405505a9F2b0B7452C844F1e64423849fC',
    },
    abi: [
        {
            anonymous: false,
            inputs: [
                {
                    indexed: false,
                    internalType: 'address',
                    name: 'buyer',
                    type: 'address',
                },
                {
                    indexed: false,
                    internalType: 'address',
                    name: 'market',
                    type: 'address',
                },
                {
                    indexed: false,
                    internalType: 'enum RangedMarket.Position',
                    name: 'position',
                    type: 'uint8',
                },
                {
                    indexed: false,
                    internalType: 'uint256',
                    name: 'amount',
                    type: 'uint256',
                },
                {
                    indexed: false,
                    internalType: 'uint256',
                    name: 'sUSDPaid',
                    type: 'uint256',
                },
                {
                    indexed: false,
                    internalType: 'address',
                    name: 'susd',
                    type: 'address',
                },
                {
                    indexed: false,
                    internalType: 'address',
                    name: 'asset',
                    type: 'address',
                },
            ],
            name: 'BoughtFromAmm',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: false,
                    internalType: 'address',
                    name: 'oldOwner',
                    type: 'address',
                },
                {
                    indexed: false,
                    internalType: 'address',
                    name: 'newOwner',
                    type: 'address',
                },
            ],
            name: 'OwnerChanged',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: false,
                    internalType: 'address',
                    name: 'newOwner',
                    type: 'address',
                },
            ],
            name: 'OwnerNominated',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [{ indexed: false, internalType: 'bool', name: 'isPaused', type: 'bool' }],
            name: 'PauseChanged',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: false,
                    internalType: 'address',
                    name: 'market',
                    type: 'address',
                },
                {
                    indexed: false,
                    internalType: 'address',
                    name: 'leftMarket',
                    type: 'address',
                },
                {
                    indexed: false,
                    internalType: 'address',
                    name: 'rightMarket',
                    type: 'address',
                },
            ],
            name: 'RangedMarketCreated',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: false,
                    internalType: 'address',
                    name: 'refferer',
                    type: 'address',
                },
                {
                    indexed: false,
                    internalType: 'address',
                    name: 'trader',
                    type: 'address',
                },
                {
                    indexed: false,
                    internalType: 'uint256',
                    name: 'amount',
                    type: 'uint256',
                },
                {
                    indexed: false,
                    internalType: 'uint256',
                    name: 'volume',
                    type: 'uint256',
                },
            ],
            name: 'ReferrerPaid',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: false,
                    internalType: 'uint256',
                    name: 'capPerMarket',
                    type: 'uint256',
                },
            ],
            name: 'SetCapPerMarket',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: false,
                    internalType: 'uint256',
                    name: '_spread',
                    type: 'uint256',
                },
            ],
            name: 'SetMaxSupportedPrice',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: false,
                    internalType: 'uint256',
                    name: '_spread',
                    type: 'uint256',
                },
            ],
            name: 'SetMaxinalDifBetweenStrikes',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: false,
                    internalType: 'uint256',
                    name: '_spread',
                    type: 'uint256',
                },
            ],
            name: 'SetMinSupportedPrice',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: false,
                    internalType: 'uint256',
                    name: '_spread',
                    type: 'uint256',
                },
            ],
            name: 'SetMinimalDifBetweenStrikes',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: false,
                    internalType: 'uint256',
                    name: 'rangedAmmFee',
                    type: 'uint256',
                },
            ],
            name: 'SetRangedAmmFee',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: false,
                    internalType: 'address',
                    name: 'sUSD',
                    type: 'address',
                },
            ],
            name: 'SetSUSD',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: false,
                    internalType: 'address',
                    name: '_safeBox',
                    type: 'address',
                },
            ],
            name: 'SetSafeBox',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: false,
                    internalType: 'uint256',
                    name: '_safeBoxImpact',
                    type: 'uint256',
                },
            ],
            name: 'SetSafeBoxImpact',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: false,
                    internalType: 'address',
                    name: '_stakingThales',
                    type: 'address',
                },
            ],
            name: 'SetStakingThales',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: false,
                    internalType: 'address',
                    name: 'seller',
                    type: 'address',
                },
                {
                    indexed: false,
                    internalType: 'address',
                    name: 'market',
                    type: 'address',
                },
                {
                    indexed: false,
                    internalType: 'enum RangedMarket.Position',
                    name: 'position',
                    type: 'uint8',
                },
                {
                    indexed: false,
                    internalType: 'uint256',
                    name: 'amount',
                    type: 'uint256',
                },
                {
                    indexed: false,
                    internalType: 'uint256',
                    name: 'sUSDPaid',
                    type: 'uint256',
                },
                {
                    indexed: false,
                    internalType: 'address',
                    name: 'susd',
                    type: 'address',
                },
                {
                    indexed: false,
                    internalType: 'address',
                    name: 'asset',
                    type: 'address',
                },
            ],
            name: 'SoldToAMM',
            type: 'event',
        },
        {
            inputs: [],
            name: 'acceptOwnership',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [
                {
                    internalType: 'contract RangedMarket',
                    name: 'rangedMarket',
                    type: 'address',
                },
                {
                    internalType: 'enum RangedMarket.Position',
                    name: 'position',
                    type: 'uint8',
                },
            ],
            name: 'availableToBuyFromAMM',
            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [
                {
                    internalType: 'contract RangedMarket',
                    name: 'rangedMarket',
                    type: 'address',
                },
                {
                    internalType: 'enum RangedMarket.Position',
                    name: 'position',
                    type: 'uint8',
                },
            ],
            name: 'availableToSellToAMM',
            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [
                {
                    internalType: 'contract RangedMarket',
                    name: 'rangedMarket',
                    type: 'address',
                },
                {
                    internalType: 'enum RangedMarket.Position',
                    name: 'position',
                    type: 'uint8',
                },
                { internalType: 'uint256', name: 'amount', type: 'uint256' },
                { internalType: 'uint256', name: 'expectedPayout', type: 'uint256' },
                { internalType: 'uint256', name: 'additionalSlippage', type: 'uint256' },
            ],
            name: 'buyFromAMM',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [
                {
                    internalType: 'contract RangedMarket',
                    name: 'rangedMarket',
                    type: 'address',
                },
                {
                    internalType: 'enum RangedMarket.Position',
                    name: 'position',
                    type: 'uint8',
                },
                { internalType: 'uint256', name: 'amount', type: 'uint256' },
                { internalType: 'uint256', name: 'expectedPayout', type: 'uint256' },
                { internalType: 'uint256', name: 'additionalSlippage', type: 'uint256' },
                { internalType: 'address', name: 'collateral', type: 'address' },
                { internalType: 'address', name: '_referrer', type: 'address' },
            ],
            name: 'buyFromAMMWithDifferentCollateralAndReferrer',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [
                {
                    internalType: 'contract RangedMarket',
                    name: 'rangedMarket',
                    type: 'address',
                },
                {
                    internalType: 'enum RangedMarket.Position',
                    name: 'position',
                    type: 'uint8',
                },
                { internalType: 'uint256', name: 'amount', type: 'uint256' },
                { internalType: 'uint256', name: 'expectedPayout', type: 'uint256' },
                { internalType: 'uint256', name: 'additionalSlippage', type: 'uint256' },
                { internalType: 'address', name: 'referrer', type: 'address' },
            ],
            name: 'buyFromAMMWithReferrer',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [
                {
                    internalType: 'contract RangedMarket',
                    name: 'rangedMarket',
                    type: 'address',
                },
                {
                    internalType: 'enum RangedMarket.Position',
                    name: 'position',
                    type: 'uint8',
                },
                { internalType: 'uint256', name: 'amount', type: 'uint256' },
            ],
            name: 'buyFromAmmQuote',
            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [
                {
                    internalType: 'contract RangedMarket',
                    name: 'rangedMarket',
                    type: 'address',
                },
                {
                    internalType: 'enum RangedMarket.Position',
                    name: 'position',
                    type: 'uint8',
                },
                { internalType: 'uint256', name: 'amount', type: 'uint256' },
            ],
            name: 'buyFromAmmQuoteDetailed',
            outputs: [
                { internalType: 'uint256', name: '', type: 'uint256' },
                { internalType: 'uint256', name: '', type: 'uint256' },
                { internalType: 'uint256', name: '', type: 'uint256' },
            ],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [
                {
                    internalType: 'contract RangedMarket',
                    name: 'rangedMarket',
                    type: 'address',
                },
                {
                    internalType: 'enum RangedMarket.Position',
                    name: 'position',
                    type: 'uint8',
                },
                { internalType: 'uint256', name: 'amount', type: 'uint256' },
                { internalType: 'address', name: 'collateral', type: 'address' },
            ],
            name: 'buyFromAmmQuoteWithDifferentCollateral',
            outputs: [
                { internalType: 'uint256', name: '', type: 'uint256' },
                { internalType: 'uint256', name: '', type: 'uint256' },
            ],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [
                { internalType: 'address', name: 'leftMarket', type: 'address' },
                { internalType: 'address', name: 'rightMarket', type: 'address' },
            ],
            name: 'canCreateRangedMarket',
            outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'capPerMarket',
            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [
                { internalType: 'address', name: 'leftMarket', type: 'address' },
                { internalType: 'address', name: 'rightMarket', type: 'address' },
            ],
            name: 'createRangedMarket',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [
                { internalType: 'address', name: '', type: 'address' },
                { internalType: 'address', name: '', type: 'address' },
            ],
            name: 'createdRangedMarkets',
            outputs: [{ internalType: 'address', name: '', type: 'address' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'curveSUSD',
            outputs: [{ internalType: 'contract ICurveSUSD', name: '', type: 'address' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'dai',
            outputs: [{ internalType: 'address', name: '', type: 'address' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'initNonReentrant',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [
                { internalType: 'address', name: '_owner', type: 'address' },
                {
                    internalType: 'contract IThalesAMM',
                    name: '_thalesAmm',
                    type: 'address',
                },
                { internalType: 'uint256', name: '_rangedAmmFee', type: 'uint256' },
                { internalType: 'uint256', name: '_capPerMarket', type: 'uint256' },
                {
                    internalType: 'contract IERC20Upgradeable',
                    name: '_sUSD',
                    type: 'address',
                },
                { internalType: 'address', name: '_safeBox', type: 'address' },
                { internalType: 'uint256', name: '_safeBoxImpact', type: 'uint256' },
            ],
            name: 'initialize',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [],
            name: 'lastPauseTime',
            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'maxSupportedPrice',
            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'maximalDifBetweenStrikes',
            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [
                {
                    internalType: 'contract RangedMarket',
                    name: 'rangedMarket',
                    type: 'address',
                },
            ],
            name: 'minInPrice',
            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'minSupportedPrice',
            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'minimalDifBetweenStrikes',
            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [{ internalType: 'address', name: '_owner', type: 'address' }],
            name: 'nominateNewOwner',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [],
            name: 'nominatedOwner',
            outputs: [{ internalType: 'address', name: '', type: 'address' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'owner',
            outputs: [{ internalType: 'address', name: '', type: 'address' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'paused',
            outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'rangedAmmFee',
            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'rangedMarketMastercopy',
            outputs: [{ internalType: 'address', name: '', type: 'address' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'rangedPositionMastercopy',
            outputs: [{ internalType: 'address', name: '', type: 'address' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'referrals',
            outputs: [{ internalType: 'address', name: '', type: 'address' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'referrerFee',
            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [
                { internalType: 'address payable', name: 'account', type: 'address' },
                { internalType: 'uint256', name: 'amount', type: 'uint256' },
            ],
            name: 'retrieveSUSDAmount',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [],
            name: 'sUSD',
            outputs: [{ internalType: 'contract IERC20Upgradeable', name: '', type: 'address' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'safeBox',
            outputs: [{ internalType: 'address', name: '', type: 'address' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'safeBoxImpact',
            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [
                {
                    internalType: 'contract RangedMarket',
                    name: 'rangedMarket',
                    type: 'address',
                },
                {
                    internalType: 'enum RangedMarket.Position',
                    name: 'position',
                    type: 'uint8',
                },
                { internalType: 'uint256', name: 'amount', type: 'uint256' },
                { internalType: 'uint256', name: 'expectedPayout', type: 'uint256' },
                { internalType: 'uint256', name: 'additionalSlippage', type: 'uint256' },
            ],
            name: 'sellToAMM',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [
                {
                    internalType: 'contract RangedMarket',
                    name: 'rangedMarket',
                    type: 'address',
                },
                {
                    internalType: 'enum RangedMarket.Position',
                    name: 'position',
                    type: 'uint8',
                },
                { internalType: 'uint256', name: 'amount', type: 'uint256' },
            ],
            name: 'sellToAmmQuote',
            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [
                {
                    internalType: 'contract RangedMarket',
                    name: 'rangedMarket',
                    type: 'address',
                },
                {
                    internalType: 'enum RangedMarket.Position',
                    name: 'position',
                    type: 'uint8',
                },
                { internalType: 'uint256', name: 'amount', type: 'uint256' },
            ],
            name: 'sellToAmmQuoteDetailed',
            outputs: [
                { internalType: 'uint256', name: '', type: 'uint256' },
                { internalType: 'uint256', name: '', type: 'uint256' },
                { internalType: 'uint256', name: '', type: 'uint256' },
            ],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [
                { internalType: 'uint256', name: '_capPerMarket', type: 'uint256' },
                { internalType: 'uint256', name: '_rangedAMMFee', type: 'uint256' },
            ],
            name: 'setCapPerMarketAndRangedAMMFee',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [
                { internalType: 'address', name: '_curveSUSD', type: 'address' },
                { internalType: 'address', name: '_dai', type: 'address' },
                { internalType: 'address', name: '_usdc', type: 'address' },
                { internalType: 'address', name: '_usdt', type: 'address' },
            ],
            name: 'setCurveSUSD',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [
                { internalType: 'uint256', name: '_minSupportedPrice', type: 'uint256' },
                { internalType: 'uint256', name: '_maxSupportedPrice', type: 'uint256' },
                {
                    internalType: 'uint256',
                    name: '_minDiffBetweenStrikes',
                    type: 'uint256',
                },
                {
                    internalType: 'uint256',
                    name: '_maxDiffBetweenStrikes',
                    type: 'uint256',
                },
            ],
            name: 'setMinMaxSupportedPrice',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [{ internalType: 'address', name: '_owner', type: 'address' }],
            name: 'setOwner',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [{ internalType: 'bool', name: '_paused', type: 'bool' }],
            name: 'setPaused',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [
                {
                    internalType: 'address',
                    name: '_rangedMarketMastercopy',
                    type: 'address',
                },
                {
                    internalType: 'address',
                    name: '_rangedPositionMastercopy',
                    type: 'address',
                },
            ],
            name: 'setRangedMarketMastercopies',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [
                { internalType: 'address', name: '_safeBox', type: 'address' },
                { internalType: 'uint256', name: '_safeBoxImpact', type: 'uint256' },
            ],
            name: 'setSafeBoxData',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [
                { internalType: 'address', name: '_thalesAMM', type: 'address' },
                {
                    internalType: 'contract IStakingThales',
                    name: '_stakingThales',
                    type: 'address',
                },
                { internalType: 'address', name: '_referrals', type: 'address' },
                { internalType: 'uint256', name: '_referrerFee', type: 'uint256' },
            ],
            name: 'setThalesAMMStakingThalesAndReferrals',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [{ internalType: 'address', name: '', type: 'address' }],
            name: 'spentOnMarket',
            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'stakingThales',
            outputs: [{ internalType: 'contract IStakingThales', name: '', type: 'address' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'thalesAmm',
            outputs: [{ internalType: 'contract IThalesAMM', name: '', type: 'address' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [{ internalType: 'address', name: 'proxyAddress', type: 'address' }],
            name: 'transferOwnershipAtInit',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [
                { internalType: 'address', name: 'receiver', type: 'address' },
                { internalType: 'uint256', name: 'amount', type: 'uint256' },
            ],
            name: 'transferSusdTo',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [],
            name: 'usdc',
            outputs: [{ internalType: 'address', name: '', type: 'address' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'usdt',
            outputs: [{ internalType: 'address', name: '', type: 'address' }],
            stateMutability: 'view',
            type: 'function',
        },
    ],
};

export default rangedMarketAMMContract;
